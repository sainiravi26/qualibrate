{
  "collection": {
    "_": {
      "postman_id": "498f69dc-a2ba-4895-8474-ad1a673a3d2c"
    },
    "item": [
      {
        "id": "a866b681-99a8-4b69-ade6-454c91687da1",
        "name": "Create User",
        "request": {
          "url": {
            "port": "{{server_port}}",
            "path": [
              "users"
            ],
            "host": [
              "{{server_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{userPostBody}}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "cc37ff44-405a-4c76-85a5-f6a981f55248",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"location header is present\", function () {",
                "    pm.response.to.have.header(\"location\");",
                "});",
                "",
                "pm.test(\"Verify user creation response\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.firstName).to.eql(data.createUserRequest.firstName);",
                "    pm.expect(jsonData.lastName).to.eql(data.createUserRequest.lastName);",
                "    pm.expect(jsonData.email).to.eql(data.createUserRequest.email);",
                "});",
                "",
                "pm.environment.set(\"userLocation\", pm.response.headers.get(\"location\"));"
              ],
              "_lastExecutionId": "0242b102-f912-4239-a1d4-eae0e6f7e819"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "e530606e-a739-48ea-a26e-b23fe17e9724",
              "type": "text/javascript",
              "exec": [
                "// Dynamically build up the request body",
                "var json = ",
                "{firstName: data.createUserRequest.firstName",
                ",lastName: data.createUserRequest.lastName",
                ",email: data.createUserRequest.email",
                "};",
                "",
                "// Store request",
                "pm.environment.set(\"userPostBody\", JSON.stringify(json));"
              ],
              "_lastExecutionId": "cb030abb-0139-4f49-8bd4-106feb082a52"
            }
          }
        ]
      },
      {
        "id": "ca756db2-c824-4814-aa81-8086d07f5457",
        "name": "Get User",
        "request": {
          "url": {
            "host": [
              "{{userLocation}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f60ad3c4-6dd7-444b-abb5-91ca355ebc95",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify user response\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.firstName).to.eql(data.createUserRequest.firstName);",
                "    pm.expect(jsonData.lastName).to.eql(data.createUserRequest.lastName);",
                "    pm.expect(jsonData.email).to.eql(data.createUserRequest.email);",
                "});"
              ],
              "_lastExecutionId": "e8b8d816-df4c-4f45-a5d3-8c66de6d07db"
            }
          }
        ]
      },
      {
        "id": "02ffcb5b-d30d-432b-ad35-c69abe4c242e",
        "name": "Update User",
        "request": {
          "url": {
            "host": [
              "{{userLocation}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{{updatedUserBody}}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "671a5dde-d272-4ea7-824b-f0f6228791f4",
              "type": "text/javascript",
              "exec": [
                "// Dynamically build up the request body",
                "var json = ",
                "{firstName: data.updateUserRequest.firstName",
                ",lastName: data.updateUserRequest.lastName",
                ",email: data.updateUserRequest.email",
                "};",
                "",
                "// Store request",
                "pm.environment.set(\"updatedUserBody\", JSON.stringify(json));"
              ],
              "_lastExecutionId": "a45a5c56-de2b-474e-8c5c-469822cbac43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc3e0640-8b02-44cd-a669-3af721f7c83a",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify user creation response\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.firstName).to.eql(data.updateUserRequest.firstName);",
                "    pm.expect(jsonData.lastName).to.eql(data.updateUserRequest.lastName);",
                "    pm.expect(jsonData.email).to.eql(data.updateUserRequest.email);",
                "});"
              ],
              "_lastExecutionId": "b745a9bc-1bf6-49cf-8177-38231352041b"
            }
          }
        ]
      },
      {
        "id": "84d96508-0935-4f6d-9599-a6acadc7a15f",
        "name": "Add File",
        "request": {
          "url": {
            "path": [
              "files"
            ],
            "host": [
              "{{userLocation}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "file",
                "value": "",
                "type": "file",
                "src": "{{fileName}}"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "bfeeaf1a-ff69-4260-8e91-f478059df419",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"location header is present\", function () {",
                "    pm.response.to.have.header(\"location\");",
                "});",
                "",
                "pm.test(\"Verify file creation response\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.uuid).not.equal(null);",
                "    pm.expect(jsonData.name).not.equal(null);",
                "    pm.expect(jsonData.path).not.equal(null);",
                "    pm.expect(jsonData.mime).not.equal(null);",
                "});",
                "",
                "pm.environment.set(\"fileLocation\", pm.response.headers.get(\"location\"));"
              ],
              "_lastExecutionId": "a419dfb9-f22b-4ffc-94cb-e5eeb43a570b"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "ad722c84-d910-478e-91ff-b1cfe5dae019",
              "type": "text/javascript",
              "exec": [
                "pm.environment.set(\"fileName\", data.addFileRequest.fileName);"
              ],
              "_lastExecutionId": "3c930723-d4b7-4721-bf16-2108ef546f59"
            }
          }
        ]
      },
      {
        "id": "c6975b49-1fba-478c-89b4-4a10b4a88347",
        "name": "Get File",
        "request": {
          "url": {
            "host": [
              "{{fileLocation}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f60ad3c4-6dd7-444b-abb5-91ca355ebc95",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify file creation response\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.uuid).not.equal(null);",
                "    pm.expect(jsonData.name).not.equal(null);",
                "    pm.expect(jsonData.path).not.equal(null);",
                "    pm.expect(jsonData.mime).not.equal(null);",
                "});"
              ],
              "_lastExecutionId": "acd77692-fce6-44c6-8ab9-91811593894b"
            }
          }
        ]
      },
      {
        "id": "45c54991-6108-4615-87ed-05a783042d3a",
        "name": "Get User Files",
        "request": {
          "url": {
            "path": [
              "files"
            ],
            "host": [
              "{{userLocation}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f60ad3c4-6dd7-444b-abb5-91ca355ebc95",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify file creation response\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.items.length).to.eql(1);",
                "});"
              ],
              "_lastExecutionId": "64e6ed24-e436-47fd-a1b7-1e1b2d313070"
            }
          }
        ]
      },
      {
        "id": "3d0faf7d-f132-4263-b7a8-f71a00020e34",
        "name": "Delete User",
        "request": {
          "url": {
            "host": [
              "{{userLocation}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c0e0b1e3-34b7-48b4-a0b7-9de23c9f5f47",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 204\", function () {",
                "    pm.response.to.have.status(204);",
                "});"
              ],
              "_lastExecutionId": "5ee03e75-a570-4b31-bc93-4070707c8dfb"
            }
          }
        ]
      },
      {
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "name": "Create Users Batch",
        "request": {
          "url": {
            "port": "{{server_port}}",
            "path": [
              "users"
            ],
            "host": [
              "{{server_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{{batchUserBody}}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
              "type": "text/javascript",
              "exec": [
                "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                "if(userBatchCount === undefined) {",
                "    userBatchCount=0;",
                "} else {",
                "    userBatchCount++;",
                "}",
                "",
                "var json = ",
                "{firstName: data.createUserBatch[userBatchCount].firstName",
                ",lastName: data.createUserBatch[userBatchCount].lastName",
                ",email: data.createUserBatch[userBatchCount].email",
                "};",
                "",
                "if(userBatchCount < (data.createUserBatch.length-1)) {",
                "    postman.setNextRequest(\"Create Users Batch\");",
                "}",
                "",
                "pm.environment.set(\"userBatchCount\", userBatchCount);",
                "",
                "// Store request",
                "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
              ],
              "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});"
              ],
              "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
            }
          }
        ]
      },
      {
        "id": "2e9c1c0b-1f49-4338-9db6-2ab52cd51811",
        "name": "Get Users Page",
        "request": {
          "url": {
            "port": "{{server_port}}",
            "path": [
              "users"
            ],
            "host": [
              "{{server_url}}"
            ],
            "query": [
              {
                "key": "page",
                "value": "{{page}}"
              },
              {
                "key": "pageSize",
                "value": "{{pageSize}}"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cebce0b2-d965-40bb-a3ea-c29cdd911ed9",
              "type": "text/javascript",
              "exec": [
                "var getUsersBatchCount = pm.environment.get(\"getUsersBatchCount\");",
                "if(getUsersBatchCount === undefined) {",
                "    getUsersBatchCount=0;",
                "} else {",
                "    getUsersBatchCount++;",
                "}",
                "",
                "if(getUsersBatchCount < (data.usersPageRequest.length-1)) {",
                "    postman.setNextRequest(\"Get Users Page\");",
                "}",
                "",
                "pm.environment.set(\"getUsersBatchCount\", getUsersBatchCount);",
                "",
                "// Store request",
                "pm.environment.set(\"page\", data.usersPageRequest[getUsersBatchCount].page);",
                "pm.environment.set(\"pageSize\", data.usersPageRequest[getUsersBatchCount].pageSize);",
                "pm.environment.set(\"resultSize\", data.usersPageRequest[getUsersBatchCount].resultSize);"
              ],
              "_lastExecutionId": "593b7b9d-a0ae-44ed-a87b-59bb688c74d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb9b4207-2f31-4921-9fb9-7d2e2866d92e",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Verify status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Verify number of users in response\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.items.length).to.eql(pm.environment.get(\"resultSize\"));",
                "});"
              ],
              "_lastExecutionId": "918a57b4-e59d-47d8-9398-9ff45461d327"
            }
          }
        ]
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "5c121170-7e1e-4eda-88d4-90c7a3f6685e",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "414f5171-3a5b-4a9a-9ee3-df530c31fad1"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "8b98450e-60b2-49d4-bf2d-680b21ca331a",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "00f052c4-7777-4f95-8436-33c2497d068c"
        }
      }
    ],
    "protocolProfileBehavior": {},
    "variable": [],
    "info": {
      "_postman_id": "498f69dc-a2ba-4895-8474-ad1a673a3d2c",
      "name": "user_apis",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Qualibrate api test to create users",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2019-12-09T14:00:51.381Z",
      "postman_exported_using": "Postman/7.13.0"
    },
    "id": "8c1105d2-00d1-4ce2-b67a-ccfaea3c0f9e",
    "name": "qualibrate-api-env",
    "values": [
      {
        "type": "any",
        "value": "http://localhost",
        "key": "server_url"
      },
      {
        "type": "any",
        "value": "8080",
        "key": "server_port"
      },
      {
        "type": "any",
        "value": "{\"firstName\":\"Ravi\",\"lastName\":\"Saini\",\"email\":\"sainiravi26@gmail.com\"}",
        "key": "userPostBody"
      },
      {
        "type": "any",
        "value": "http://localhost:8080/users/1",
        "key": "userLocation"
      },
      {
        "type": "any",
        "value": "{\"firstName\":\"r\",\"lastName\":\"s\",\"email\":\"sainiravi26@gmail.com\"}",
        "key": "updatedUserBody"
      },
      {
        "type": "any",
        "value": "Qualibrate Code Challenge 2019.pdf",
        "key": "fileName"
      },
      {
        "type": "any",
        "value": "http://localhost:8080/users/1/files/2",
        "key": "fileLocation"
      },
      {
        "type": "any",
        "value": 6,
        "key": "userBatchCount"
      },
      {
        "type": "any",
        "value": "{\"firstName\":\"g\",\"lastName\":\"g\",\"email\":\"g.g@gmail.com\"}",
        "key": "batchUserBody"
      },
      {
        "type": "any",
        "value": 1,
        "key": "getUsersBatchCount"
      },
      {
        "type": "any",
        "value": 1,
        "key": "page"
      },
      {
        "type": "any",
        "value": 5,
        "key": "pageSize"
      },
      {
        "type": "any",
        "value": 2,
        "key": "resultSize"
      }
    ]
  },
  "globals": {
    "id": "da7e399f-0346-42ce-8462-418941d09720",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 60,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 16,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 26,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 32,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 28,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 56.75,
      "responseMin": 9,
      "responseMax": 559,
      "responseSd": 130.74665387687747,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1575901688375,
      "completed": 1575901689975
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 9,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d2053ffe-bd1d-472e-9de6-065b91885b32",
          "httpRequestId": "06f092b8-217a-4400-b5f8-844c465dbd46"
        },
        "item": {
          "id": "a866b681-99a8-4b69-ade6-454c91687da1",
          "name": "Create User",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "name": "Content-Type",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{userPostBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cc37ff44-405a-4c76-85a5-f6a981f55248",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"location header is present\", function () {",
                  "    pm.response.to.have.header(\"location\");",
                  "});",
                  "",
                  "pm.test(\"Verify user creation response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.firstName).to.eql(data.createUserRequest.firstName);",
                  "    pm.expect(jsonData.lastName).to.eql(data.createUserRequest.lastName);",
                  "    pm.expect(jsonData.email).to.eql(data.createUserRequest.email);",
                  "});",
                  "",
                  "pm.environment.set(\"userLocation\", pm.response.headers.get(\"location\"));"
                ],
                "_lastExecutionId": "0242b102-f912-4239-a1d4-eae0e6f7e819"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "e530606e-a739-48ea-a26e-b23fe17e9724",
                "type": "text/javascript",
                "exec": [
                  "// Dynamically build up the request body",
                  "var json = ",
                  "{firstName: data.createUserRequest.firstName",
                  ",lastName: data.createUserRequest.lastName",
                  ",email: data.createUserRequest.email",
                  "};",
                  "",
                  "// Store request",
                  "pm.environment.set(\"userPostBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "cb030abb-0139-4f49-8bd4-106feb082a52"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "name": "Content-Type",
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1a40df45-f62c-4491-90b2-161dd0b4fe73",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 71,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"Ravi\",\"lastName\":\"Saini\",\"email\":\"sainiravi26@gmail.com\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "58c14210-d4e2-4e8b-b119-62c7c23d76fa",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/1"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              97,
              118,
              105,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              97,
              105,
              110,
              105,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              115,
              97,
              105,
              110,
              105,
              114,
              97,
              118,
              105,
              50,
              54,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 559,
          "responseSize": 78
        },
        "id": "a866b681-99a8-4b69-ade6-454c91687da1",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "location header is present",
            "skipped": false
          },
          {
            "assertion": "Verify user creation response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fd63e3cb-b90f-4c4e-938f-78b7f34bbb1d",
          "length": 9,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a6181bd3-2899-462e-8a64-7b3b9352e24c"
        },
        "item": {
          "id": "ca756db2-c824-4814-aa81-8086d07f5457",
          "name": "Get User",
          "request": {
            "url": {
              "host": [
                "{{userLocation}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f60ad3c4-6dd7-444b-abb5-91ca355ebc95",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify user response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.firstName).to.eql(data.createUserRequest.firstName);",
                  "    pm.expect(jsonData.lastName).to.eql(data.createUserRequest.lastName);",
                  "    pm.expect(jsonData.email).to.eql(data.createUserRequest.email);",
                  "});"
                ],
                "_lastExecutionId": "e8b8d816-df4c-4f45-a5d3-8c66de6d07db"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "475c03de-a4ec-4d87-9558-ed1eea39c31c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b147ef6b-dc47-43b9-9671-ba148a0344c1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              97,
              118,
              105,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              97,
              105,
              110,
              105,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              115,
              97,
              105,
              110,
              105,
              114,
              97,
              118,
              105,
              50,
              54,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 45,
          "responseSize": 78
        },
        "id": "ca756db2-c824-4814-aa81-8086d07f5457",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "15d5bab7-54e0-417f-b615-cafad505ca01",
          "length": 9,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a16b8134-1615-41f4-8b87-91ce8732a179"
        },
        "item": {
          "id": "02ffcb5b-d30d-432b-ad35-c69abe4c242e",
          "name": "Update User",
          "request": {
            "url": {
              "host": [
                "{{userLocation}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{{updatedUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "671a5dde-d272-4ea7-824b-f0f6228791f4",
                "type": "text/javascript",
                "exec": [
                  "// Dynamically build up the request body",
                  "var json = ",
                  "{firstName: data.updateUserRequest.firstName",
                  ",lastName: data.updateUserRequest.lastName",
                  ",email: data.updateUserRequest.email",
                  "};",
                  "",
                  "// Store request",
                  "pm.environment.set(\"updatedUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "a45a5c56-de2b-474e-8c5c-469822cbac43"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "dc3e0640-8b02-44cd-a669-3af721f7c83a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify user creation response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.firstName).to.eql(data.updateUserRequest.firstName);",
                  "    pm.expect(jsonData.lastName).to.eql(data.updateUserRequest.lastName);",
                  "    pm.expect(jsonData.email).to.eql(data.updateUserRequest.email);",
                  "});"
                ],
                "_lastExecutionId": "b745a9bc-1bf6-49cf-8177-38231352041b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9e879c54-2f93-4f31-915d-734627c6ebaa",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 64,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"r\",\"lastName\":\"s\",\"email\":\"sainiravi26@gmail.com\"}"
          }
        },
        "response": {
          "id": "696839ef-ae09-4c5e-a968-a2a4cb4307df",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              114,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              115,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              115,
              97,
              105,
              110,
              105,
              114,
              97,
              118,
              105,
              50,
              54,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 26,
          "responseSize": 71
        },
        "id": "02ffcb5b-d30d-432b-ad35-c69abe4c242e",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify user creation response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "70003de9-bf3d-4b94-939b-b7844c66426b",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1c0c8a1e-8abb-41c8-b676-bb92344bcbdd"
        },
        "item": {
          "id": "84d96508-0935-4f6d-9599-a6acadc7a15f",
          "name": "Add File",
          "request": {
            "url": {
              "path": [
                "files"
              ],
              "host": [
                "{{userLocation}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "value": "",
                  "type": "file",
                  "src": "{{fileName}}"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bfeeaf1a-ff69-4260-8e91-f478059df419",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"location header is present\", function () {",
                  "    pm.response.to.have.header(\"location\");",
                  "});",
                  "",
                  "pm.test(\"Verify file creation response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.uuid).not.equal(null);",
                  "    pm.expect(jsonData.name).not.equal(null);",
                  "    pm.expect(jsonData.path).not.equal(null);",
                  "    pm.expect(jsonData.mime).not.equal(null);",
                  "});",
                  "",
                  "pm.environment.set(\"fileLocation\", pm.response.headers.get(\"location\"));"
                ],
                "_lastExecutionId": "a419dfb9-f22b-4ffc-94cb-e5eeb43a570b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ad722c84-d910-478e-91ff-b1cfe5dae019",
                "type": "text/javascript",
                "exec": [
                  "pm.environment.set(\"fileName\", data.addFileRequest.fileName);"
                ],
                "_lastExecutionId": "3c930723-d4b7-4721-bf16-2108ef546f59"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users",
              "1",
              "files"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "48d9248c-1d47-46e6-8d06-9a4ff4bf35f6",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 45386,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "file",
                "value": {
                  "_readableState": {
                    "objectMode": false,
                    "highWaterMark": 65536,
                    "buffer": {
                      "head": null,
                      "tail": null,
                      "length": 0
                    },
                    "length": 0,
                    "pipes": null,
                    "pipesCount": 0,
                    "flowing": true,
                    "ended": true,
                    "endEmitted": true,
                    "reading": false,
                    "sync": false,
                    "needReadable": false,
                    "emittedReadable": false,
                    "readableListening": false,
                    "resumeScheduled": false,
                    "paused": false,
                    "emitClose": false,
                    "autoDestroy": false,
                    "destroyed": true,
                    "defaultEncoding": "utf8",
                    "awaitDrain": 0,
                    "readingMore": false,
                    "decoder": null,
                    "encoding": null
                  },
                  "readable": false,
                  "_events": {},
                  "_eventsCount": 3,
                  "path": "/Users/ravisaini/projects/assignment/qualibrate/tests/Qualibrate Code Challenge 2019.pdf",
                  "fd": null,
                  "flags": "r",
                  "mode": 438,
                  "end": null,
                  "autoClose": true,
                  "bytesRead": 45149,
                  "closed": true
                },
                "type": "file",
                "src": "Qualibrate Code Challenge 2019.pdf"
              }
            ]
          }
        },
        "response": {
          "id": "a69a606c-45ec-47e9-be31-0e86187f1137",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/1/files/2"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              117,
              117,
              105,
              100,
              34,
              58,
              34,
              99,
              51,
              52,
              48,
              51,
              102,
              52,
              53,
              45,
              100,
              102,
              98,
              51,
              45,
              52,
              100,
              57,
              56,
              45,
              56,
              56,
              49,
              97,
              45,
              99,
              50,
              54,
              50,
              57,
              55,
              51,
              53,
              99,
              97,
              56,
              55,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              81,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              32,
              67,
              111,
              100,
              101,
              32,
              67,
              104,
              97,
              108,
              108,
              101,
              110,
              103,
              101,
              32,
              50,
              48,
              49,
              57,
              46,
              112,
              100,
              102,
              34,
              44,
              34,
              112,
              97,
              116,
              104,
              34,
              58,
              34,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              114,
              97,
              118,
              105,
              115,
              97,
              105,
              110,
              105,
              47,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              97,
              115,
              115,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              47,
              113,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              47,
              113,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              45,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              46,
              117,
              112,
              108,
              111,
              97,
              100,
              115,
              47,
              99,
              51,
              52,
              48,
              51,
              102,
              52,
              53,
              45,
              100,
              102,
              98,
              51,
              45,
              52,
              100,
              57,
              56,
              45,
              56,
              56,
              49,
              97,
              45,
              99,
              50,
              54,
              50,
              57,
              55,
              51,
              53,
              99,
              97,
              56,
              55,
              34,
              44,
              34,
              109,
              105,
              109,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              112,
              100,
              102,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 57,
          "responseSize": 245
        },
        "id": "84d96508-0935-4f6d-9599-a6acadc7a15f",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          },
          {
            "assertion": "location header is present",
            "skipped": false
          },
          {
            "assertion": "Verify file creation response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3518ef1a-1aff-480b-a63e-8f60cc8355aa",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "395c8422-85cb-4cd6-affa-ac0d69ab65f0"
        },
        "item": {
          "id": "c6975b49-1fba-478c-89b4-4a10b4a88347",
          "name": "Get File",
          "request": {
            "url": {
              "host": [
                "{{fileLocation}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f60ad3c4-6dd7-444b-abb5-91ca355ebc95",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify file creation response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.uuid).not.equal(null);",
                  "    pm.expect(jsonData.name).not.equal(null);",
                  "    pm.expect(jsonData.path).not.equal(null);",
                  "    pm.expect(jsonData.mime).not.equal(null);",
                  "});"
                ],
                "_lastExecutionId": "acd77692-fce6-44c6-8ab9-91811593894b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users",
              "1",
              "files",
              "2"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f821291d-abfa-406e-9ea7-762c9ef131b0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0c99ff26-3fd6-4f69-b5c9-3fea148406c6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              117,
              117,
              105,
              100,
              34,
              58,
              34,
              99,
              51,
              52,
              48,
              51,
              102,
              52,
              53,
              45,
              100,
              102,
              98,
              51,
              45,
              52,
              100,
              57,
              56,
              45,
              56,
              56,
              49,
              97,
              45,
              99,
              50,
              54,
              50,
              57,
              55,
              51,
              53,
              99,
              97,
              56,
              55,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              81,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              32,
              67,
              111,
              100,
              101,
              32,
              67,
              104,
              97,
              108,
              108,
              101,
              110,
              103,
              101,
              32,
              50,
              48,
              49,
              57,
              46,
              112,
              100,
              102,
              34,
              44,
              34,
              112,
              97,
              116,
              104,
              34,
              58,
              34,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              114,
              97,
              118,
              105,
              115,
              97,
              105,
              110,
              105,
              47,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              97,
              115,
              115,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              47,
              113,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              47,
              113,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              45,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              46,
              117,
              112,
              108,
              111,
              97,
              100,
              115,
              47,
              99,
              51,
              52,
              48,
              51,
              102,
              52,
              53,
              45,
              100,
              102,
              98,
              51,
              45,
              52,
              100,
              57,
              56,
              45,
              56,
              56,
              49,
              97,
              45,
              99,
              50,
              54,
              50,
              57,
              55,
              51,
              53,
              99,
              97,
              56,
              55,
              34,
              44,
              34,
              109,
              105,
              109,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              112,
              100,
              102,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 14,
          "responseSize": 245
        },
        "id": "c6975b49-1fba-478c-89b4-4a10b4a88347",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify file creation response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "149f67de-c7af-43f7-bb06-a300e7c1ef85",
          "length": 9,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c9290fd9-a323-43bc-9844-8690d21db0cc"
        },
        "item": {
          "id": "45c54991-6108-4615-87ed-05a783042d3a",
          "name": "Get User Files",
          "request": {
            "url": {
              "path": [
                "files"
              ],
              "host": [
                "{{userLocation}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f60ad3c4-6dd7-444b-abb5-91ca355ebc95",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify file creation response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.items.length).to.eql(1);",
                  "});"
                ],
                "_lastExecutionId": "64e6ed24-e436-47fd-a1b7-1e1b2d313070"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users",
              "1",
              "files"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8e25da1a-a38b-48b1-8e2d-fef660c1edea",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0e58e730-5254-44ba-966b-5d40ab65593b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              117,
              117,
              105,
              100,
              34,
              58,
              34,
              99,
              51,
              52,
              48,
              51,
              102,
              52,
              53,
              45,
              100,
              102,
              98,
              51,
              45,
              52,
              100,
              57,
              56,
              45,
              56,
              56,
              49,
              97,
              45,
              99,
              50,
              54,
              50,
              57,
              55,
              51,
              53,
              99,
              97,
              56,
              55,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              81,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              32,
              67,
              111,
              100,
              101,
              32,
              67,
              104,
              97,
              108,
              108,
              101,
              110,
              103,
              101,
              32,
              50,
              48,
              49,
              57,
              46,
              112,
              100,
              102,
              34,
              44,
              34,
              112,
              97,
              116,
              104,
              34,
              58,
              34,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              114,
              97,
              118,
              105,
              115,
              97,
              105,
              110,
              105,
              47,
              112,
              114,
              111,
              106,
              101,
              99,
              116,
              115,
              47,
              97,
              115,
              115,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              47,
              113,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              47,
              113,
              117,
              97,
              108,
              105,
              98,
              114,
              97,
              116,
              101,
              45,
              115,
              101,
              114,
              118,
              105,
              99,
              101,
              47,
              46,
              117,
              112,
              108,
              111,
              97,
              100,
              115,
              47,
              99,
              51,
              52,
              48,
              51,
              102,
              52,
              53,
              45,
              100,
              102,
              98,
              51,
              45,
              52,
              100,
              57,
              56,
              45,
              56,
              56,
              49,
              97,
              45,
              99,
              50,
              54,
              50,
              57,
              55,
              51,
              53,
              99,
              97,
              56,
              55,
              34,
              44,
              34,
              109,
              105,
              109,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              112,
              100,
              102,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 58,
          "responseSize": 257
        },
        "id": "45c54991-6108-4615-87ed-05a783042d3a",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify file creation response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "79a693a2-24cd-4e65-9dce-9d699d218445",
          "length": 9,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a57068d8-75e2-41e9-aed6-ccfbb88381d8"
        },
        "item": {
          "id": "3d0faf7d-f132-4263-b7a8-f71a00020e34",
          "name": "Delete User",
          "request": {
            "url": {
              "host": [
                "{{userLocation}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0e0b1e3-34b7-48b4-a0b7-9de23c9f5f47",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "_lastExecutionId": "5ee03e75-a570-4b31-bc93-4070707c8dfb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3d17213d-0f04-4192-90c5-fe1a5b33f7a2",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 0,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "58729bef-3a42-44af-945a-5a6f2fc06f88",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 34,
          "responseSize": 0
        },
        "id": "3d0faf7d-f132-4263-b7a8-f71a00020e34",
        "assertions": [
          {
            "assertion": "Verify status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "912e0079-7604-4946-8c01-77d21ae72489",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9f2a3355-0d27-4bb5-af61-a90271ffb675"
        },
        "item": {
          "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
          "name": "Create Users Batch",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{batchUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
                "type": "text/javascript",
                "exec": [
                  "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                  "if(userBatchCount === undefined) {",
                  "    userBatchCount=0;",
                  "} else {",
                  "    userBatchCount++;",
                  "}",
                  "",
                  "var json = ",
                  "{firstName: data.createUserBatch[userBatchCount].firstName",
                  ",lastName: data.createUserBatch[userBatchCount].lastName",
                  ",email: data.createUserBatch[userBatchCount].email",
                  "};",
                  "",
                  "if(userBatchCount < (data.createUserBatch.length-1)) {",
                  "    postman.setNextRequest(\"Create Users Batch\");",
                  "}",
                  "",
                  "pm.environment.set(\"userBatchCount\", userBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "60982c81-b2ab-42aa-9e66-1e20ce2042c8",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 56,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"a\",\"lastName\":\"a\",\"email\":\"a.a@gmail.com\"}"
          }
        },
        "response": {
          "id": "a2d7445e-881b-4363-a4e1-d09743c469cf",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/3"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              46,
              97,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 63
        },
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1d7823fc-d5ad-48e6-8014-c5d4d333dc6e",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ef171cc6-2b92-44ee-a40e-9a747a620f6b"
        },
        "item": {
          "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
          "name": "Create Users Batch",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{batchUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
                "type": "text/javascript",
                "exec": [
                  "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                  "if(userBatchCount === undefined) {",
                  "    userBatchCount=0;",
                  "} else {",
                  "    userBatchCount++;",
                  "}",
                  "",
                  "var json = ",
                  "{firstName: data.createUserBatch[userBatchCount].firstName",
                  ",lastName: data.createUserBatch[userBatchCount].lastName",
                  ",email: data.createUserBatch[userBatchCount].email",
                  "};",
                  "",
                  "if(userBatchCount < (data.createUserBatch.length-1)) {",
                  "    postman.setNextRequest(\"Create Users Batch\");",
                  "}",
                  "",
                  "pm.environment.set(\"userBatchCount\", userBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6506b6c4-e2a1-4b33-b97d-c958edbb25b0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 56,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"b\",\"lastName\":\"b\",\"email\":\"b.b@gmail.com\"}"
          }
        },
        "response": {
          "id": "ebff70e0-e4ff-467f-8b32-b95d55703c70",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/4"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              98,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              98,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              98,
              46,
              98,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 63
        },
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "45740dbc-0e85-4638-a8f0-395dbefa4c70",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3a9db413-4ade-499f-92f1-793567b96a2a"
        },
        "item": {
          "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
          "name": "Create Users Batch",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{batchUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
                "type": "text/javascript",
                "exec": [
                  "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                  "if(userBatchCount === undefined) {",
                  "    userBatchCount=0;",
                  "} else {",
                  "    userBatchCount++;",
                  "}",
                  "",
                  "var json = ",
                  "{firstName: data.createUserBatch[userBatchCount].firstName",
                  ",lastName: data.createUserBatch[userBatchCount].lastName",
                  ",email: data.createUserBatch[userBatchCount].email",
                  "};",
                  "",
                  "if(userBatchCount < (data.createUserBatch.length-1)) {",
                  "    postman.setNextRequest(\"Create Users Batch\");",
                  "}",
                  "",
                  "pm.environment.set(\"userBatchCount\", userBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1c14690d-4ca8-49cb-82f3-2ce6dc3d18d6",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 56,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"c\",\"lastName\":\"c\",\"email\":\"c.c@gmail.com\"}"
          }
        },
        "response": {
          "id": "a9dda6b3-6745-466c-9950-a533900979f9",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/5"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              53,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              99,
              46,
              99,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 63
        },
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b02fdeef-9d2d-4470-917b-0a7aeefae144",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1498f428-dccb-4d54-b6b1-c0b0030d624d"
        },
        "item": {
          "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
          "name": "Create Users Batch",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{batchUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
                "type": "text/javascript",
                "exec": [
                  "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                  "if(userBatchCount === undefined) {",
                  "    userBatchCount=0;",
                  "} else {",
                  "    userBatchCount++;",
                  "}",
                  "",
                  "var json = ",
                  "{firstName: data.createUserBatch[userBatchCount].firstName",
                  ",lastName: data.createUserBatch[userBatchCount].lastName",
                  ",email: data.createUserBatch[userBatchCount].email",
                  "};",
                  "",
                  "if(userBatchCount < (data.createUserBatch.length-1)) {",
                  "    postman.setNextRequest(\"Create Users Batch\");",
                  "}",
                  "",
                  "pm.environment.set(\"userBatchCount\", userBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c31585c5-faaf-4344-8663-6c080abbac44",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 56,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"d\",\"lastName\":\"d\",\"email\":\"d.d@gmail.com\"}"
          }
        },
        "response": {
          "id": "c193b845-a903-43f1-b714-2eebe46d9683",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/6"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              54,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              100,
              46,
              100,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 63
        },
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f7177cab-7de9-4b24-80d7-c65152061daf",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c19663ed-66a2-49f0-bbe8-9609982ee6b2"
        },
        "item": {
          "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
          "name": "Create Users Batch",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{batchUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
                "type": "text/javascript",
                "exec": [
                  "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                  "if(userBatchCount === undefined) {",
                  "    userBatchCount=0;",
                  "} else {",
                  "    userBatchCount++;",
                  "}",
                  "",
                  "var json = ",
                  "{firstName: data.createUserBatch[userBatchCount].firstName",
                  ",lastName: data.createUserBatch[userBatchCount].lastName",
                  ",email: data.createUserBatch[userBatchCount].email",
                  "};",
                  "",
                  "if(userBatchCount < (data.createUserBatch.length-1)) {",
                  "    postman.setNextRequest(\"Create Users Batch\");",
                  "}",
                  "",
                  "pm.environment.set(\"userBatchCount\", userBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2a6631bb-8170-4ea1-8407-f2b2e8243265",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 56,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"e\",\"lastName\":\"e\",\"email\":\"e.e@gmail.com\"}"
          }
        },
        "response": {
          "id": "06692d2b-0d50-433e-85a6-3e9341e57e9c",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/7"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              101,
              46,
              101,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 10,
          "responseSize": 63
        },
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "27590043-dd93-4a75-86d7-aae2b4cf4449",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bf58adf3-f5c1-49a3-bb1d-2b28fd776c67"
        },
        "item": {
          "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
          "name": "Create Users Batch",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{batchUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
                "type": "text/javascript",
                "exec": [
                  "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                  "if(userBatchCount === undefined) {",
                  "    userBatchCount=0;",
                  "} else {",
                  "    userBatchCount++;",
                  "}",
                  "",
                  "var json = ",
                  "{firstName: data.createUserBatch[userBatchCount].firstName",
                  ",lastName: data.createUserBatch[userBatchCount].lastName",
                  ",email: data.createUserBatch[userBatchCount].email",
                  "};",
                  "",
                  "if(userBatchCount < (data.createUserBatch.length-1)) {",
                  "    postman.setNextRequest(\"Create Users Batch\");",
                  "}",
                  "",
                  "pm.environment.set(\"userBatchCount\", userBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f3646124-4af7-4f4a-aa09-37c2866d5d84",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 56,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"f\",\"lastName\":\"f\",\"email\":\"f.f@gmail.com\"}"
          }
        },
        "response": {
          "id": "7279b8fa-4d9c-4c2c-99cd-747cbba8e2ef",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/8"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              102,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              102,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              102,
              46,
              102,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 12,
          "responseSize": 63
        },
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "8680036b-ba40-4ce5-8de4-b16e878cc115",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "38cfde2f-3874-45d0-bc2f-e83da56eba7c"
        },
        "item": {
          "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
          "name": "Create Users Batch",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{{batchUserBody}}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "045406c4-aef5-464f-9bc5-2a5acede0210",
                "type": "text/javascript",
                "exec": [
                  "var userBatchCount = pm.environment.get(\"userBatchCount\");",
                  "if(userBatchCount === undefined) {",
                  "    userBatchCount=0;",
                  "} else {",
                  "    userBatchCount++;",
                  "}",
                  "",
                  "var json = ",
                  "{firstName: data.createUserBatch[userBatchCount].firstName",
                  ",lastName: data.createUserBatch[userBatchCount].lastName",
                  ",email: data.createUserBatch[userBatchCount].email",
                  "};",
                  "",
                  "if(userBatchCount < (data.createUserBatch.length-1)) {",
                  "    postman.setNextRequest(\"Create Users Batch\");",
                  "}",
                  "",
                  "pm.environment.set(\"userBatchCount\", userBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"batchUserBody\", JSON.stringify(json));"
                ],
                "_lastExecutionId": "43402c1a-d853-4da6-8a97-b0a81ad43efd"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "3c2cfc2d-d8a7-443a-9496-9f2db35d7a29",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "_lastExecutionId": "f430a245-f8c2-4e28-8ece-c2d7872ba3f6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e603ce6f-384f-4e9e-a655-15fe05adbe05",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 56,
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"firstName\":\"g\",\"lastName\":\"g\",\"email\":\"g.g@gmail.com\"}"
          }
        },
        "response": {
          "id": "3f28dd93-4298-435c-b7ee-227b592046f9",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "Location",
              "value": "http://localhost:8080/users/9"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              103,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              103,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              103,
              46,
              103,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 63
        },
        "id": "f49bcc22-245e-4f0b-b387-b75327e75663",
        "assertions": [
          {
            "assertion": "Verify status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "421e66f0-13b0-4565-99f4-1162458e8684",
          "length": 9,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0a04cc24-e9e5-4caa-b8db-599e573f9053"
        },
        "item": {
          "id": "2e9c1c0b-1f49-4338-9db6-2ab52cd51811",
          "name": "Get Users Page",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "{{page}}"
                },
                {
                  "key": "pageSize",
                  "value": "{{pageSize}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "cebce0b2-d965-40bb-a3ea-c29cdd911ed9",
                "type": "text/javascript",
                "exec": [
                  "var getUsersBatchCount = pm.environment.get(\"getUsersBatchCount\");",
                  "if(getUsersBatchCount === undefined) {",
                  "    getUsersBatchCount=0;",
                  "} else {",
                  "    getUsersBatchCount++;",
                  "}",
                  "",
                  "if(getUsersBatchCount < (data.usersPageRequest.length-1)) {",
                  "    postman.setNextRequest(\"Get Users Page\");",
                  "}",
                  "",
                  "pm.environment.set(\"getUsersBatchCount\", getUsersBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"page\", data.usersPageRequest[getUsersBatchCount].page);",
                  "pm.environment.set(\"pageSize\", data.usersPageRequest[getUsersBatchCount].pageSize);",
                  "pm.environment.set(\"resultSize\", data.usersPageRequest[getUsersBatchCount].resultSize);"
                ],
                "_lastExecutionId": "593b7b9d-a0ae-44ed-a87b-59bb688c74d4"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fb9b4207-2f31-4921-9fb9-7d2e2866d92e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify number of users in response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.items.length).to.eql(pm.environment.get(\"resultSize\"));",
                  "});"
                ],
                "_lastExecutionId": "918a57b4-e59d-47d8-9398-9ff45461d327"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "page",
                "value": "0"
              },
              {
                "key": "pageSize",
                "value": "5"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4aacb569-63c3-42ac-852c-da7bf9bd4b85",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "4cf9f9e6-3c8f-46d8-aebc-979a83479236",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              97,
              46,
              97,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              52,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              98,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              98,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              98,
              46,
              98,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              53,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              99,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              99,
              46,
              99,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              54,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              100,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              100,
              46,
              100,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              101,
              46,
              101,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 32,
          "responseSize": 331
        },
        "id": "2e9c1c0b-1f49-4338-9db6-2ab52cd51811",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify number of users in response",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2d76646b-142c-46b4-8258-b98855668431",
          "length": 9,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c389c3c9-91ed-441b-b687-54ae639d6b64"
        },
        "item": {
          "id": "2e9c1c0b-1f49-4338-9db6-2ab52cd51811",
          "name": "Get Users Page",
          "request": {
            "url": {
              "port": "{{server_port}}",
              "path": [
                "users"
              ],
              "host": [
                "{{server_url}}"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "{{page}}"
                },
                {
                  "key": "pageSize",
                  "value": "{{pageSize}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "cebce0b2-d965-40bb-a3ea-c29cdd911ed9",
                "type": "text/javascript",
                "exec": [
                  "var getUsersBatchCount = pm.environment.get(\"getUsersBatchCount\");",
                  "if(getUsersBatchCount === undefined) {",
                  "    getUsersBatchCount=0;",
                  "} else {",
                  "    getUsersBatchCount++;",
                  "}",
                  "",
                  "if(getUsersBatchCount < (data.usersPageRequest.length-1)) {",
                  "    postman.setNextRequest(\"Get Users Page\");",
                  "}",
                  "",
                  "pm.environment.set(\"getUsersBatchCount\", getUsersBatchCount);",
                  "",
                  "// Store request",
                  "pm.environment.set(\"page\", data.usersPageRequest[getUsersBatchCount].page);",
                  "pm.environment.set(\"pageSize\", data.usersPageRequest[getUsersBatchCount].pageSize);",
                  "pm.environment.set(\"resultSize\", data.usersPageRequest[getUsersBatchCount].resultSize);"
                ],
                "_lastExecutionId": "593b7b9d-a0ae-44ed-a87b-59bb688c74d4"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "fb9b4207-2f31-4921-9fb9-7d2e2866d92e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Verify number of users in response\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.items.length).to.eql(pm.environment.get(\"resultSize\"));",
                  "});"
                ],
                "_lastExecutionId": "918a57b4-e59d-47d8-9398-9ff45461d327"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "users"
            ],
            "host": [
              "localhost"
            ],
            "query": [
              {
                "key": "page",
                "value": "1"
              },
              {
                "key": "pageSize",
                "value": "5"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.21.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e300d312-8e94-4386-b1fb-65bb18526a6a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "98f1cc58-5520-424c-96e9-7a44226c37e3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Method"
            },
            {
              "key": "Vary",
              "value": "Access-Control-Request-Headers"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-XSS-Protection",
              "value": "1; mode=block"
            },
            {
              "key": "Cache-Control",
              "value": "no-cache, no-store, max-age=0, must-revalidate"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            },
            {
              "key": "Expires",
              "value": "0"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Mon, 09 Dec 2019 14:28:08 GMT"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              116,
              101,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              102,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              102,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              102,
              46,
              102,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              102,
              105,
              114,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              103,
              34,
              44,
              34,
              108,
              97,
              115,
              116,
              78,
              97,
              109,
              101,
              34,
              58,
              34,
              103,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              103,
              46,
              103,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 11,
          "responseSize": 139
        },
        "id": "2e9c1c0b-1f49-4338-9db6-2ab52cd51811",
        "assertions": [
          {
            "assertion": "Verify status code is 200",
            "skipped": false
          },
          {
            "assertion": "Verify number of users in response",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1885
    },
    "failures": [],
    "error": null
  }
}